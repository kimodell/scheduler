{"version":3,"sources":["helpers/selectors.js","reducers/application.js","hooks/useApplicationData.js","hooks/useRealtimeUpdate.js","components/DayListItem.js","components/DayList.js","components/Appointment/Header.js","components/Appointment/Empty.js","components/Appointment/Show.js","components/Appointment/index.js","components/Application.js","index.js"],"names":["getInterview","state","interview","_objectSpread","interviewer","interviewers","reducer","action","type","day","days","appointments","appointment","id","_defineProperty","getSpotsForDay","length","reduce","count","map","includes","spots","Error","concat","useApplicationData","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","useEffect","Promise","all","axios","get","then","_ref","_ref2","data","socket","WebSocket","process","onmessage","event","JSON","parse","close","useRealTimeUpdate","setDay","bookInterview","put","cancelInterview","delete","DayListItem","props","number","dayClass","classnames","selected","React","createElement","className","onClick","name","data-testid","DayList","key","Header","time","Empty","src","alt","onAdd","Show","student","onEdit","onDelete","Appointment","console","log","Application","_useApplicationData","found","find","d","undefined","getInterviewersForDay","getAppointmentsForDay","Object","assign","REACT_APP_API_BASE_URL","defaults","baseURL","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a563ad8.chunk.js","sourcesContent":["export function getAppointmentsForDay(state, day) {\n  const found = state.days.find(d => day === d.name);\n\n  if (state.days.length === 0 || found === undefined) return [];\n\n  return found.appointments.map(id => state.appointments[id]);\n}\n\nexport function getInterviewersForDay(state, day) {\n  const found = state.days.find(d => day === d.name);\n\n  if (state.days.length === 0 || found === undefined) return [];\n\n  return found.interviewers.map(id => state.interviewers[id]);\n}\n\nexport function getInterview(state, interview) {\n  return (\n    interview && {\n      ...interview,\n      interviewer: state.interviewers[interview.interviewer]\n    }\n  );\n}\n","export const SET_DAY = \"SET_DAY\";\nexport const SET_APPLICATION_DATA = \"SET_APPLICATION_DATA\";\nexport const SET_INTERVIEW = \"SET_INTERVIEW\";\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return { ...state, day: action.day };\n    case SET_APPLICATION_DATA:\n      return {\n        ...state,\n        days: action.days,\n        appointments: action.appointments,\n        interviewers: action.interviewers\n      };\n    case SET_INTERVIEW: {\n      const appointment = {\n        ...state.appointments[action.id],\n        interview: action.interview && { ...action.interview }\n      };\n\n      const appointments = {\n        ...state.appointments,\n        [action.id]: appointment\n      };\n\n      const getSpotsForDay = day =>\n        day.appointments.length -\n        day.appointments.reduce(\n          (count, id) => (appointments[id].interview ? count + 1 : count),\n          0\n        );\n\n      const days = state.days.map(day => {\n        return day.appointments.includes(action.id)\n          ? {\n              ...day,\n              spots: getSpotsForDay(day)\n            }\n          : day;\n      });\n\n      return {\n        ...state,\n        appointments,\n        days\n      };\n    }\n    default:\n      throw new Error(\n        `Tried to reduce with unsupported action type: ${action.type}`\n      );\n  }\n}\n","import { useReducer, useEffect } from \"react\";\n\nimport axios from \"axios\";\n\nimport reducer, {\n  SET_DAY,\n  SET_APPLICATION_DATA,\n  SET_INTERVIEW\n} from \"reducers/application\";\n\nimport useRealTimeUpdate from \"hooks/useRealtimeUpdate\";\n\nexport default function useApplicationData() {\n  const [state, dispatch] = useReducer(reducer, {\n    day: \"Monday\",\n    days: [],\n    appointments: {},\n    interviewers: {}\n  });\n\n  const setDay = day => dispatch({ type: SET_DAY, day });\n\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"/api/days\"),\n      axios.get(\"/api/appointments\"),\n      axios.get(\"/api/interviewers\")\n    ]).then(\n      ([{ data: days }, { data: appointments }, { data: interviewers }]) =>\n        dispatch({\n          type: SET_APPLICATION_DATA,\n          days,\n          appointments,\n          interviewers\n        })\n    );\n  }, []);\n\n  useRealTimeUpdate(dispatch);\n\n  function bookInterview(id, interview) {\n    return axios.put(`/api/appointments/${id}`, { interview }).then(() => {\n      dispatch({\n        type: SET_INTERVIEW,\n        id,\n        interview\n      });\n    });\n  }\n\n  function cancelInterview(id) {\n    return axios.delete(`/api/appointments/${id}`).then(() => {\n      dispatch({\n        type: SET_INTERVIEW,\n        id,\n        interview: null\n      });\n    });\n  }\n\n  return {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  };\n}\n","import { useEffect } from \"react\";\nimport { SET_INTERVIEW } from \"reducers/application\";\n\nexport default function useRealtimeUpdate(dispatch) {\n  useEffect(() => {\n    const socket = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\n\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n\n      if (typeof data === \"object\" && data.type === SET_INTERVIEW) {\n        dispatch(data);\n      }\n    };\n\n    return () => {\n      socket.close();\n    };\n  }, [dispatch]);\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport \"components/DayListItem.scss\";\n\nexport function formatSpots(number) {\n  if (number === 0) return \"no spots remaining\";\n  if (number === 1) return \"1 spot remaining\";\n\n  return `${number} spots remaining`;\n}\n\nexport default function DayListItem(props) {\n  const dayClass = classnames(\"day-list__item\", {\n    \"day-list__item--selected\": props.selected,\n    \"day-list__item--full\": props.spots === 0\n  });\n\n  return (\n    <li\n      className={dayClass}\n      onClick={() => props.setDay(props.name)}\n      data-testid=\"day\"\n    >\n      <h2 className=\"text--regular\">{props.name}</h2>\n      <h3 className=\"text--light\">{formatSpots(props.spots)}</h3>\n    </li>\n  );\n}\n","import React from \"react\";\n\nimport DayListItem from \"components/DayListItem\";\n\nexport default function DayList(props) {\n  const days = props.days.map(day => {\n    return (\n      <DayListItem\n        key={day.id}\n        name={day.name}\n        spots={day.spots}\n        selected={day.name === props.day}\n        setDay={props.setDay}\n      />\n    );\n  });\n\n  return <ul>{days}</ul>;\n}\n","import React from \"react\";\n\nexport default function Header(props) {\n  return (\n    <header className=\"appointment__time\">\n      <h4 className=\"text--semi-bold\">{props.time}</h4>\n      <hr className=\"appointment__separator\" />\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function Empty(props) {\n  return (\n    <main className=\"appointment__add\">\n      <img\n        className=\"appointment__add-button\"\n        src=\"images/add.png\"\n        alt=\"Add\"\n        onClick={props.onAdd}\n      />\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function Show(props) {\n  return (\n    <main className=\"appointment__card appointment__card--show\">\n      <section className=\"appointment__card-left\">\n        <h2 className=\"text--regular\">{props.student}</h2>\n        <section className=\"interviewer\">\n          <h4 className=\"text--light\">Interviewer</h4>\n          <h3 className=\"text--regular\">\n            {props.interviewer && props.interviewer.name}\n          </h3>\n        </section>\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/edit.png\"\n            alt=\"Edit\"\n            onClick={props.onEdit}\n          />\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/trash.png\"\n            alt=\"Delete\"\n            onClick={props.onDelete}\n          />\n        </section>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\n\nimport \"components/Appointment/styles.scss\";\n\nimport Header from \"components/Appointment/Header\";\n\nimport Empty from \"components/Appointment/Empty\";\nimport Show from \"components/Appointment/Show\";\n\nexport default function Appointment(props) {\n  return (\n    <article className=\"appointment\" data-testid=\"appointment\">\n      <Header time={props.time} />\n      {props.interview ?\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n          onDelete={() => console.log(\"CONFIRM\")}\n          onEdit={() => console.log(\"EDIT\")}\n        />\n        :\n        <Empty onAdd={() => console.log(\"CREATE\")} />}\n    </article>\n  );\n}\n","import React from \"react\";\n\nimport {\n  getAppointmentsForDay,\n  getInterviewersForDay,\n  getInterview\n} from \"helpers/selectors\";\n\nimport useApplicationData from \"hooks/useApplicationData\";\n\nimport \"components/Application.scss\";\n\nimport DayList from \"components/DayList\";\nimport Appointment from \"components/Appointment\";\n\nexport default function Application(props) {\n  const {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  } = useApplicationData();\n\n  const interviewers = getInterviewersForDay(state, state.day);\n\n  const appointments = getAppointmentsForDay(state, state.day).map(\n    appointment => {\n      return (\n        <Appointment\n          key={appointment.id}\n          {...appointment}\n          interview={getInterview(state, appointment.interview)}\n          interviewers={interviewers}\n          bookInterview={bookInterview}\n          cancelInterview={cancelInterview}\n        />\n      );\n    }\n  );\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList days={state.days} day={state.day} setDay={setDay} />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {appointments}\n        <Appointment key=\"last\" time=\"5pm\" />\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"index.scss\";\n\nimport Application from \"components/Application\";\n\nimport axios from \"axios\";\n\nif (process.env.REACT_APP_API_BASE_URL) {\n  axios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\n}\n\nReactDOM.render(<Application />, document.getElementById(\"root\"));\n"],"sourceRoot":""}